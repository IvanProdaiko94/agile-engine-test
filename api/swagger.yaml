---
swagger: "2.0"
info:
  description: "We are looking to build a money accounting application. We need a\
    \ web application, which tracks money flow of a single user."
  version: "0.0.2"
  title: "Accounting notebook"
host: "localhost"
basePath: "/api"
tags:
- name: "transactions"
  description: "Transaction operations. There are 2 types of transaction: credit and\
    \ debit. Credit transaction leads to the account balance growth. Debit transaction\
    \ leads to the account balance reduction."
schemes:
- "http"
paths:
  /balance:
    get:
      summary: "Fetches current account balance"
      operationId: "balanceGET"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
      x-swagger-router-controller: "Default"
  /transactions:
    get:
      tags:
      - "transactions"
      summary: "Fetches transactions history"
      operationId: "transactionsHistory"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: "invalid status value"
      x-swagger-router-controller: "Transactions"
    post:
      tags:
      - "transactions"
      summary: "Commit new transaction to the account"
      operationId: "commitTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Transaction object"
        required: true
        schema:
          $ref: "#/definitions/TransactionBody"
      responses:
        "200":
          description: "transaction stored"
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: "invalid input"
      x-swagger-router-controller: "Transactions"
  /transactions/{transactionId}:
    get:
      tags:
      - "transactions"
      summary: "Find transaction by ID"
      description: "Returns a single transaction object"
      operationId: "getTransactionById"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "ID of transaction to return"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: "invalid ID supplied"
        "404":
          description: "transaction not found"
      x-swagger-router-controller: "Transactions"
  /swagger:
    x-swagger-pipe: "swagger_raw"
definitions:
  TransactionBody:
    type: "object"
    required:
    - "amount"
    - "type"
    properties:
      type:
        type: "string"
        enum:
        - "credit"
        - "debit"
      amount:
        type: "number"
        description: "Transaction numeric value. Incrementing or decrementing the\
          \ account balance, based on the transaction type."
    example:
      amount: 0.80082819046101150206595775671303272247314453125
      type: "credit"
  Transaction:
    type: "object"
    required:
    - "amount"
    - "type"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Unique transaction identifier, generated by the service, when\
          \ the transaction is being stored."
      type:
        type: "string"
        enum:
        - "credit"
        - "debit"
      amount:
        type: "number"
        description: "Transaction numeric value. Incrementing or decrementing the\
          \ account balance, based on the transaction type."
      effectiveDate:
        type: "string"
        format: "date-time"
        description: "Effective date-time, generated by the service, when the transaction\
          \ is being stored."
    example:
      amount: 0.80082819046101150206595775671303272247314453125
      id: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      type: "credit"
      effectiveDate: "2000-01-23T04:56:07.000+00:00"
externalDocs:
  description: "Find out more about Accounting"
  url: "https://en.wikipedia.org/wiki/Debits_and_credits"
